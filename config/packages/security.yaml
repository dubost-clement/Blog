security:
    encoders:
        App\Entity\User:
            algorithm: bcrypt
        Symfony\Component\Security\Core\User\User:
            algorithm: bcrypt
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory: { memory: ~ }
        in_database:
            entity:
                class: App\Entity\User
                property: username
        in_test:
            memory:
                users:
                    toto:
                        password: $2y$13$tgb1a1k4LzsQzPbvL1PBGOMBJtb9696Rbi5KHRHumqqBKX2SLCXkm
                        roles: 'ROLE_ADMIN'

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true

            provider: in_test

            form_login:
                login_path: security_login
                check_path: security_login

            logout:
               path: security_logout
               target: home 

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/inscription, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
